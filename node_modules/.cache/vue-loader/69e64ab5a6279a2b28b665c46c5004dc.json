{"remainingRequest":"/home/pi/MothersCall/mother_vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/pi/MothersCall/mother_vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pi/MothersCall/mother_vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pi/MothersCall/mother_vue/src/views/FaunaForm.vue?vue&type=template&id=ddf85932","dependencies":[{"path":"/home/pi/MothersCall/mother_vue/src/views/FaunaForm.vue","mtime":1531105322211},{"path":"/home/pi/MothersCall/mother_vue/node_modules/cache-loader/dist/cjs.js","mtime":1530586025002},{"path":"/home/pi/MothersCall/mother_vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1526010763000},{"path":"/home/pi/MothersCall/mother_vue/node_modules/cache-loader/dist/cjs.js","mtime":1530586025002},{"path":"/home/pi/MothersCall/mother_vue/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"faunaCreate\" }, [\n    _c(\n      \"h2\",\n      {\n        on: {\n          click: function($event) {\n            _vm.addForm = !_vm.addForm\n          }\n        }\n      },\n      [_vm._v(_vm._s(_vm.title))]\n    ),\n    _c(\n      \"form\",\n      {\n        directives: [\n          {\n            name: \"show\",\n            rawName: \"v-show\",\n            value: _vm.addForm,\n            expression: \"addForm\"\n          }\n        ]\n      },\n      [\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.creatureName,\n              expression: \"creatureName\"\n            }\n          ],\n          attrs: { name: \"name\", placeholder: \"Basic name\" },\n          domProps: { value: _vm.creatureName },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.creatureName = $event.target.value\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.creatureClass,\n              expression: \"creatureClass\"\n            }\n          ],\n          attrs: {\n            name: \"classification\",\n            placeholder: \"Taxonomy classification\"\n          },\n          domProps: { value: _vm.creatureClass },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.creatureClass = $event.target.value\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.creatureIndigenous,\n              expression: \"creatureIndigenous\"\n            }\n          ],\n          attrs: { name: \"indigenous\", placeholder: \"Indigenous name\" },\n          domProps: { value: _vm.creatureIndigenous },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.creatureIndigenous = $event.target.value\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.creatureImage,\n              expression: \"creatureImage\"\n            }\n          ],\n          attrs: { name: \"image\", placeholder: \"Image file\" },\n          domProps: { value: _vm.creatureImage },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.creatureImage = $event.target.value\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\"textarea\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.creatureDesc,\n              expression: \"creatureDesc\"\n            }\n          ],\n          attrs: { name: \"notes\" },\n          domProps: { value: _vm.creatureDesc },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.creatureDesc = $event.target.value\n            }\n          }\n        }),\n        _c(\"br\"),\n        _c(\n          \"button\",\n          {\n            attrs: { type: \"button\", name: \"button\" },\n            on: {\n              click: function($event) {\n                $event.preventDefault()\n                return _vm.addCreature($event)\n              }\n            }\n          },\n          [_vm._v(\"ADD\")]\n        ),\n        _c(\"br\")\n      ]\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}